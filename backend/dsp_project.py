# -*- coding: utf-8 -*-
"""dsp_project.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1p5m9N-u9LfxB7pq6EcnrEFSVuxaPrVCW
"""

# Install dependencies
!pip install -U funasr flask-ngrok flask

# Import libraries
import os
import json
import numpy as np
from flask import Flask, request, jsonify
from funasr import AutoModel

# Load model globally (only once)
model = AutoModel(model="emotion2vec_plus_large")
print("âœ… Model loaded successfully!")

app = Flask(__name__)

@app.route("/predict", methods=["POST"])
def predict():
    try:
        file = request.files["audio"]
        file_path = "temp.wav"
        file.save(file_path)

        # Run model
        result = model.generate(file_path, granularity="utterance")
        data = result[0]

        if 'predictions' in data and 'scores' in data:
            emotions = data['predictions']
            scores = data['scores']
        elif 'labels' in data and 'scores' in data:
            emotions = [e.split('/')[-1] for e in data['labels']]
            scores = data['scores']
        else:
            return jsonify({"error": "No 'labels' or 'predictions' found"}), 500

        best_idx = int(np.argmax(scores))
        best_emotion = emotions[best_idx]
        confidence = float(scores[best_idx])
        top_emotions = sorted(zip(emotions, scores), key=lambda x: x[1], reverse=True)
        top_emotions_json = [{"emotion": e, "score": float(s)} for e, s in top_emotions]

        return jsonify({
            "emotion": best_emotion,
            "confidence": confidence,
            "topEmotions": top_emotions_json
        })

    except Exception as e:
        return jsonify({"error": str(e)}), 500

# Install pyngrok
!pip install pyngrok
from pyngrok import ngrok

# Set ngrok authtoken
# Replace "YOUR_AUTH_TOKEN" with your actual ngrok authentication token
ngrok.set_auth_token("31y3EqKzzZqEmFcksJJiO0jFShJ_76ywiqbQqegsSHLULmtL")

# Start tunnel
public_url = ngrok.connect(5001)
print("ðŸ”— Public URL:", public_url)

# Run Flask app
app.run(port=5001)